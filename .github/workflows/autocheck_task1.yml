name: Check Task 1

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

permissions:
  pull-requests: write

jobs:
  check_pr:
    runs-on: ubuntu-latest
    steps:
      # 步驟 1: 檢出 PR 的代碼
      - name: Checkout code
        uses: actions/checkout@v3

      # 步驟 2: 提取學號
      - name: Extract student ID
        id: extract_id
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          STUDENT_ID=$(echo "$PR_TITLE" | grep -oP '\b\d{9}\b')
          if [ -z "$STUDENT_ID" ]; then
            echo "錯誤：無法從 PR 標題中提取學號"
            exit 1
          fi
          echo "::set-output name=student_id::$STUDENT_ID"

      # 步驟 3: 設置 Python 環境
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # 步驟 4: 運行檢查腳本
      - name: Run check script
        id: check
        run: |
          python scripts/workflow_task1.py ${{ steps.extract_id.outputs.student_id }}
        continue-on-error: true

      # 步驟 5: 如果檢查通過，留言「合格」
      - name: Comment on PR - Passed
        if: steps.check.outcome == 'success'
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '檢查通過：合格'
            });

      # 步驟 6: 如果檢查失敗，留言錯誤信息
      - name: Comment on PR - Failed
        if: steps.check.outcome == 'failure'
        uses: actions/github-script@v6
        with:
          script: |
            const output = `${{ steps.check.outputs.errors || '未知錯誤' }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '提交不符合：\n' + output
            });